<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>wdvxdr's blog</title><link>http://blog.wdvxdr.top/</link><description>wdvxdr's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>wdvxdr@foxmail.com (wdvxdr)</managingEditor><webMaster>wdvxdr@foxmail.com (wdvxdr)</webMaster><lastBuildDate>Wed, 20 Jan 2021 11:40:28 +0800</lastBuildDate><atom:link href="http://blog.wdvxdr.top/index.xml" rel="self" type="application/rss+xml"/><item><title>现代C++在算法竞赛中的应用</title><link>http://blog.wdvxdr.top/posts/morden_c++_in_oj/</link><pubDate>Wed, 20 Jan 2021 11:40:28 +0800</pubDate><author>作者</author><guid>http://blog.wdvxdr.top/posts/morden_c++_in_oj/</guid><description>前言 C++是一门古老的编程语言，在算法竞赛中因为其优秀的运行效率和丰富的标准库，成为许多 acmer 和 oier 的 首选语言。在 C++11 面世以后，C++扩充许多特性，</description></item><item><title>Golang Mutex源码分析</title><link>http://blog.wdvxdr.top/posts/go_mutex/</link><pubDate>Mon, 14 Dec 2020 14:27:08 +0800</pubDate><author>作者</author><guid>http://blog.wdvxdr.top/posts/go_mutex/</guid><description><![CDATA[<p>Golang标准库中提供了<strong><ruby>互斥锁<rt>Mutex</rt></ruby></strong>的原语来解决并发资源竞争，这篇文章探讨了标准库
中Mutex的实现原理</p>]]></description></item><item><title>C++ 与 右值引用</title><link>http://blog.wdvxdr.top/posts/c++_rvalue/</link><pubDate>Sat, 12 Dec 2020 22:22:28 +0800</pubDate><author>作者</author><guid>http://blog.wdvxdr.top/posts/c++_rvalue/</guid><description><![CDATA[<p>C++11 添加了右值引用的特性，不仅让我们能够使用<code>移动语义</code>，而且
还可以通过<code>完美转发</code>编写接收任意实参的模板</p>]]></description></item><item><title>Hello_world</title><link>http://blog.wdvxdr.top/posts/hello_world/</link><pubDate>Sun, 06 Dec 2020 22:01:05 +0800</pubDate><author>作者</author><guid>http://blog.wdvxdr.top/posts/hello_world/</guid><description>Hello World 这是一个测试页面</description></item></channel></rss>